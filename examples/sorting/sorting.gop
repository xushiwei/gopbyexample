// Go's `sort` package implements sorting for builtins
// and user-defined types. We'll look at sorting for
// builtins first.

import (
	"sort"
)

// Sort methods are specific to the builtin type;
// here's an example for strings. Note that sorting is
// in-place, so it changes the given slice and doesn't
// return a new one.
strs := []string{"c", "a", "b"}
sort.strings strs
println "Strings:", strs

// An example of sorting `int`s.
ints := []int{7, 2, 4}
sort.ints ints
println "Ints:   ", ints

// We can also use `sort` to check if a slice is
// already in sorted order.
s := sort.intsAreSorted(ints)
println "Sorted: ", s
